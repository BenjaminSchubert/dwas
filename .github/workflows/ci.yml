name: Checks

env:
  DEFAULT_PYTHON: 3.9
  PACKAGES_PATH: .dwas/cache/package/
  COVERAGE_FILES_PATH: .dwas/cache/pytest-*/reports/coverage
  TERM: "xterm-256color"

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main

# Use the concurrency feature to ensure we don't run redundant workflows
#
concurrency:
  group: ${{ github.repository }}-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        session:
          - black
          - isort
          - mypy
          - pylint

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
          cache: pip

      # FIXME: we should take dwas from pypi once it's published
      - name: Install dwas
        run: python -m pip install .

      - name: ${{ matrix.session }}
        run: dwas --verbose --only ${{ matrix.session }}

  package:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
          cache: pip

      # FIXME: we should take dwas from pypi once it's published
      - name: Install dwas
        run: python -m pip install .

      - name: package
        run: dwas --verbose --only package

      - name: Save packaged dist
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ${{ env.PACKAGES_PATH }}/*
          retention-days: 7

  test:
    runs-on: ubuntu-latest
    needs: package

    strategy:
      fail-fast: false
      matrix:
        python:
          - "3.9"
          - "3.10"

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          cache: pip

      # FIXME: we should take dwas from pypi once it's published
      - name: Install dwas
        run: python -m pip install .

      - name: Download packaged dist
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ${{ env.PACKAGES_PATH }}

      - name: pytest[${{ matrix.python }}]
        run: dwas --verbose --only pytest[${{ matrix.python }}]

      - name: Save coverage files
        uses: actions/upload-artifact@v3
        with:
          name: coverage-files-pytest-${{ matrix.python }}
          path: ${{ env.COVERAGE_FILES_PATH }}
          retention-days: 7

  coverage:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
          cache: pip

      # FIXME: we should take dwas from pypi once it's published
      - name: Install dwas
        run: python -m pip install .

      # FIXME: We need multiple entries otherwise as wildcards are not supported
      #        Once https://github.com/dawidd6/action-download-artifact/pull/107/files
      #        is merged, it should be doable to have a single action there
      - name: Download generated coverage files
        uses: actions/download-artifact@v3
        with:
          name: coverage-files-pytest-3.9
          path: .dwas/cache

      - name: Download generated coverage files
        uses: actions/download-artifact@v3
        with:
          name: coverage-files-pytest-3.10
          path: .dwas/cache

      - name: Generate coverage report
        run: dwas --verbose --only coverage

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./_artifacts/coverage/coverage.xml
          fail_ci_if_error: true
          verbose: true

      - name: Save coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage [html]
          path: _artifacts/coverage/html
          retention-days: 7

  twine:
    runs-on: ubuntu-latest
    needs: package

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
          cache: pip

      - name: Download packaged dist
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ${{ env.PACKAGES_PATH }}

      # FIXME: we should take dwas from pypi once it's published
      - name: Install dwas
        run: python -m pip install .

      - name: Validate packages with twine
        run: dwas --verbose --only twine:check
